rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin', 'support'];
    }
    
    // Public files (no authentication required)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Only allow writes through admin SDK
    }
    
    // User-specific files (original pattern)
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin-only files
    match /admin/{allPaths=**} {
      allow read, write: if isAdmin();
    }
    
    // Shared files (authenticated users can read)
    match /shared/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Profile pictures with size and type validation
    match /profiles/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB limit
        request.resource.contentType.matches('image/.*');
    }
    
    // Profile pictures (mobile app path)
    match /profile_pictures/{userId}/{allPaths=**} {
      allow read: if true; // Public read for profile pictures
      allow create, write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB limit
        request.resource.contentType.matches('image/.*');
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Temporary uploads (auto-delete after 24 hours)
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId &&
        request.time < resource.timeCreated + duration.value(86400, 's'); // 24 hours
    }
    
    // === NEW RULES FOR VEEFYED APP PATHS ===
    
    // Verification request images
    // Path: verification_requests/{userId}/{timestamp}/{imageType}/{fileName}
    match /verification_requests/{userId}/{allPaths=**} {
      // Allow authenticated users to upload their own verification images
      allow create, write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 10 * 1024 * 1024 && // 10MB limit
        request.resource.contentType.matches('image/.*');
      
      // Allow users to read their own verification images
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow admins to read all verification images (for review purposes)
      allow read: if isAdmin();
    }
    
    // Review images
    // Path: reviews/{userId}/{timestamp}/{imageType}/{fileName}
    match /reviews/{userId}/{allPaths=**} {
      // Allow authenticated users to upload their own review images
      allow create, write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 10 * 1024 * 1024 && // 10MB limit
        request.resource.contentType.matches('image/.*');
      
      // Allow users to read their own review images
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow admins to read all review images (for moderation)
      allow read: if isAdmin();
      
      // Note: Public read access will be controlled by the app based on review approval status
      // Only approved reviews should display images publicly in the app logic
    }
    
    // Report files (evidence files and photos)
    // Path: reports/{userId}/{timestamp}/{fileType}/{fileName}
    match /reports/{userId}/{allPaths=**} {
      // Allow authenticated users to upload their own report files
      allow create, write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 20 * 1024 * 1024 && // 20MB limit for reports
        (request.resource.contentType.matches('image/.*') ||
         request.resource.contentType.matches('application/pdf') ||
         request.resource.contentType.matches('application/msword') ||
         request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
         request.resource.contentType.matches('text/plain'));
      
      // Allow users to read their own report files
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow admins to read all report files (for investigation purposes)
      allow read: if isAdmin();
    }
    
    // App issue screenshots (for technical problem reports)
    // Path: app_issues/{userId}/{timestamp}/screenshot/{fileName}
    match /app_issues/{userId}/{allPaths=**} {
      // Allow authenticated users to upload their own app issue screenshots
      allow create, write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 10 * 1024 * 1024 && // 10MB limit
        request.resource.contentType.matches('image/.*');
      
      // Allow users to read their own app issue screenshots
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Allow admins to read all app issue screenshots (for investigation)
      allow read: if isAdmin();
    }
    
    // Product images (if needed for admin uploads)
    // Path: products/{productId}/{fileName}
    match /products/{productId}/{allPaths=**} {
      // Allow public read access for product images
      allow read: if true;
      
      // Allow admins to upload product images
      allow create, write: if isAdmin() &&
        request.resource.size < 10 * 1024 * 1024 && // 10MB limit
        request.resource.contentType.matches('image/.*');
    }
    
    // Insights media (images, videos, and thumbnails)
    // Simplified path: insights/{fileName}
    // All media (images, videos, thumbnails) in one folder
    match /insights/{allPaths=**} {
      // Allow public read access for published insight media
      allow read: if true;
      
      // Allow admins to upload insight media
      allow create, write: if isAdmin() &&
        request.resource.size < 100 * 1024 * 1024 && // 100MB limit for videos
        (request.resource.contentType.matches('image/.*') ||
         request.resource.contentType.matches('video/.*'));
      
      // Allow admins to delete insight media
      allow delete: if isAdmin();
    }
    
    // Support ticket attachments
    // Path: support_attachments/{timestamp}_{fileName}
    match /support_attachments/{allPaths=**} {
      // Allow authenticated users to upload support attachments
      allow create, write: if request.auth != null &&
        request.resource.size < 20 * 1024 * 1024 && // 20MB limit
        (request.resource.contentType.matches('image/.*') ||
         request.resource.contentType.matches('application/pdf') ||
         request.resource.contentType.matches('application/msword') ||
         request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
         request.resource.contentType.matches('text/plain'));
      
      // Allow authenticated users to read their own attachments
      allow read: if request.auth != null;
      
      // Allow admins to read all support attachments
      allow read: if isAdmin();
    }
    
    // Default: deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
